#import { Mutation, PublicKey, Action, Transaction, SignedTransaction, SignTransactionResult, FinalExecutionOutcome } into Near from "w3://ens/nearPlugin.web3api.eth"

type Mutation {
  """
    JsonRpcProvider Mutation Functions
  """
  sendJsonRpc(
    method: String!
    params: JSON!
  ): JSON!

  """
    Generic Mutation Functions
  """

  # send one or more transactions to NEAR wallet to be signed and executed
  requestSignTransactions(
    # list of transactions to sign
    transactions: [Near_Transaction!]!
    # url NEAR Wallet will redirect to after transaction signing is complete
    callbackUrl: String
    # meta information NEAR Wallet will send back to the application. `meta` will be attached to the `callbackUrl` as a url search param
    meta: String
  ): Boolean!

  # sends a signed transaction and awaits execution
  sendTransaction(
    signedTx: Near_SignedTransaction!
  ): Near_FinalExecutionOutcome!

  # sends a signed transaction and immediately returns transaction hash
  sendTransactionAsync(
    signedTx: Near_SignedTransaction!
  ): String!

  # creates, signs, and sends a transaction without wallet and awaits execution
  signAndSendTransaction(
    receiverId: String!
    actions: [Near_Action!]!
    signerId: String!
  ): Near_FinalExecutionOutcome!

  # creates, signs, and sends a transaction without wallet and immediately returns transaction hash
  signAndSendTransactionAsync(
    receiverId: String!
    actions: [Near_Action!]!
    signerId: String!
  ): String!

  # create a new Near account
  createAccount(
    newAccountId: String!
    publicKey: Near_PublicKey! # | String
    amount: BigInt!
    signerId: String!
  ): Near_FinalExecutionOutcome!
    
  deleteAccount(
    accountId: String!
    beneficiaryId: String!
    signerId: String!
  ): Near_FinalExecutionOutcome!

  # deploy a contract
  deployContract(
    data: Bytes!
    contractId: String!
    signerId: String!
  ): Near_FinalExecutionOutcome!

    # transfer Near from signer to receiver
  sendMoney(
    amount: BigInt!
    receiverId: String!,
    signerId: String!
  ): Near_FinalExecutionOutcome!

  # call a contract function
  functionCall(
    contractId: String!
    methodName: String!
    args: JSON!
    gas: BigInt!
    deposit: BigInt!
    walletMeta: String
    walletCallbackUrl: String
    signerId: String
  ): Near_FinalExecutionOutcome!

  # add access key to account
  addKey(
    publicKey: Near_PublicKey! # | String
    contractId: String
    methodNames: [String!],
    amount: BigInt
    signerId: String!
  ): Near_FinalExecutionOutcome!

  # delete access key associated with public key
  deleteKey(
    publicKey: Near_PublicKey! # | String
    signerId: String!
  ): Near_FinalExecutionOutcome!

  # Create a new account and deploy a contract to it
  createAndDeployContract(
    contractId: String!
    publicKey: Near_PublicKey! # | String
    data: Bytes!
    amount: BigInt!
    signerId: String !
  ): Near_FinalExecutionOutcome!
}