#import { Mutation, TxResponse } into Ethereum from "w3://ens/ethereum.web3api.eth"
#import { ChainId, Currency, Token, TokenAmount, Route, Trade, TradeType, Pool, FeeAmount, SwapOptions, MethodParameters } from "../common/schema.graphql"

"""Transaction gas configuration"""
type GasOptions {
  """The gas price to set for the transaction"""
  gasPrice: BigInt
  """The gas limit to set for the transaction"""
  gasLimit: BigInt
}

type Mutation {
  """Call the approve(...) function of an ERC20 token contract on-chain, allowing the Uniswap router contract to transfer tokens"""
  approve(
    """Token for which to approve the Uniswap router contract to transfer"""
    token: Token!
    """The amount to approve for transfer; defaults to maximum amount if null"""
    amount: BigInt
    """Transaction gas configuration"""
    gasOptions: GasOptions
  ): Ethereum_TxResponse!

  """Send an Ethereum transaction to the given address"""
  execCall(
    """Transaction calldata and Ether value"""
    parameters: MethodParameters!
    """Address of the target Ethereum contract"""
    address: String!
    """Id of the chain on which to execute the transaction"""
    chainId: ChainId!
    """Transaction gas configuration"""
    gasOptions: GasOptions
  ): Ethereum_TxResponse!

  """Perform an on-chain swap with one or more trades in a single transaction"""
  execSwap(
    """Trades to encode into calldata"""
    trades: [Trade!]!
    """Swap configuration"""
    swapOptions: SwapOptions!
    """Transaction gas configuration"""
    gasOptions: GasOptions
  ): Ethereum_TxResponse!

  """Perform an on-chain swap within a single pool by using token and fee amount information to find the correct pool"""
  swap(
    """Input token of the pool"""
    inToken: Token!
    """Output token of the pool"""
    outToken: Token!
    """Fee amount of the pool being used for the swap"""
    fee: FeeAmount!
    """Amount being swapped in or out, depending on trade type"""
    amount: BigInt!
    """Type of trade, either exact input or exact output"""
    tradeType: TradeType!
    """Swap configuration"""
    swapOptions: SwapOptions!
    """Transaction gas configuration"""
    gasOptions: GasOptions
  ): Ethereum_TxResponse!

  """Perform an on-chain swap using a single pool at provided address; requires ERC20-compliant input and output (i.e. no Ether)"""
  swapWithPool(
    """Ethereum address of the pool used for the swap"""
    address: String!
    """Token amount being swapped in or out, depending on trade type"""
    amount: TokenAmount!
    """Type of trade, either exact input or exact output"""
    tradeType: TradeType!
    """Swap configuration"""
    swapOptions: SwapOptions!
    """Transaction gas configuration"""
    gasOptions: GasOptions
  ): Ethereum_TxResponse!

  """Deploy a pool contract on-chain"""
  deployPool(
    """A representation of the pool to deploy"""
    pool: Pool!
    """Transaction gas configuration"""
    gasOptions: GasOptions
  ): Ethereum_TxResponse!

  """Deploy a pool contract on chain for the given tokens and fee amount"""
  deployPoolFromTokens(
    """The first token of the pool, irrespective of sort order"""
    tokenA: Token!
    """The second token of the pool, irrespective of sort order"""
    tokenB: Token!
    """The fee tier of the pool"""
    fee: FeeAmount!
    """Transaction gas configuration"""
    gasOptions: GasOptions
  ): Ethereum_TxResponse!
}
